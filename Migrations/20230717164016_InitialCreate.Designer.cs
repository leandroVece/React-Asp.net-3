// <auto-generated />
using System;
using Cadeteria;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cadeteria.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230717164016_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Cadeteria.Models.Rol", b =>
                {
                    b.Property<Guid>("Id_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id_rol");

                    b.ToTable("rol", (string)null);
                });

            modelBuilder.Entity("Cadeteria.Models.User", b =>
                {
                    b.Property<Guid>("Id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("rolForeikey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id_user");

                    b.HasIndex("rolForeikey");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("Cadeteria.Models.User", b =>
                {
                    b.HasOne("Cadeteria.Models.Rol", "Rol")
                        .WithMany("User")
                        .HasForeignKey("rolForeikey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Cadeteria.Models.Rol", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
